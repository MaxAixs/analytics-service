// Code generated by MockGen. DO NOT EDIT.
// Source: analyticsItems.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	context "context"
	reflect "reflect"

	api "github.com/MaxAixs/protos/gen/api/gen/api"
	gomock "github.com/golang/mock/gomock"
)

// MockAnalytics is a mock of Analytics interface.
type MockAnalytics struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyticsMockRecorder
}

// MockAnalyticsMockRecorder is the mock recorder for MockAnalytics.
type MockAnalyticsMockRecorder struct {
	mock *MockAnalytics
}

// NewMockAnalytics creates a new mock instance.
func NewMockAnalytics(ctrl *gomock.Controller) *MockAnalytics {
	mock := &MockAnalytics{ctrl: ctrl}
	mock.recorder = &MockAnalyticsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalytics) EXPECT() *MockAnalyticsMockRecorder {
	return m.recorder
}

// GetWeeklyList mocks base method.
func (m *MockAnalytics) GetWeeklyList(ctx context.Context) (*api.WeeklyCompletedTasksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWeeklyList", ctx)
	ret0, _ := ret[0].(*api.WeeklyCompletedTasksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWeeklyList indicates an expected call of GetWeeklyList.
func (mr *MockAnalyticsMockRecorder) GetWeeklyList(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWeeklyList", reflect.TypeOf((*MockAnalytics)(nil).GetWeeklyList), ctx)
}

// SaveTaskData mocks base method.
func (m *MockAnalytics) SaveTaskData(ctx context.Context, items *api.TaskDoneItems) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTaskData", ctx, items)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveTaskData indicates an expected call of SaveTaskData.
func (mr *MockAnalyticsMockRecorder) SaveTaskData(ctx, items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTaskData", reflect.TypeOf((*MockAnalytics)(nil).SaveTaskData), ctx, items)
}
